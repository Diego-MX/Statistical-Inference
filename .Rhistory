t.interval <- -2 + c(-1,1)*qt(0.975, df=8)*2.10/sqrt(9)
t.interval
se <- 2*sqrt(3)/qt(0.975, df=8)
se
se <- sqrt(0.6^2/10 + 0.68^2/10)
mean.interval <- 3 - c(1, -1)*qt(0.975, 9)*se
mean.interval
se <- sqrt((9*0.6^2 + 9*0.68^2)/19)
mean.interval <- 3 - c(1, -1)*qt(0.975, 9)*se
mean.interval
mean.interval <- 5 - 3 - c(1, -1)*qt(0.975, 9)*se
mean.interval <- 5 - 3*c(1, -1)*qt(0.975, 9)*se
mean.interval
se <- sqrt((9*0.6^2 + 9*0.68^2)/19)
mean.interval <- 3 - 5*c(1, -1)*qt(0.975, 9)*se
se <- sqrt((9*0.6^2 + 9*0.68^2)/19)
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 9)*se
mean.interval
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 19)*se
mean.interval
se <- sqrt(0.6^2/9 + 0.68^2/19)
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 19)*se
mean.interval
library(datasets)
data(ChickWeighti)
data(ChickWeight)
library(reshape2)
summary(chickWeight)
summary(ChickWeight)
names(ChickWeight)
dcast(ChickWeight, Diet+Chick~Time, )
dcast(ChickWeight, Diet+Chick~Time )
dcast(ChickWeight, Diet+Chick~Time, value.var="Weight" )
dcast(ChickWeight, Diet+Chick~Time, value.var="weight" )
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 9)*se
se <- sqrt(0.6^2/9 + 0.68^2/9)
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 9)*se
mean.interval
egMean <- -2
egN    <- 9
se <- -egMean*sqrt(egN)/qt(0.975, df=egN-1)
se
se <- sqrt(1.5^2/9 + 1.8^2/9)
mean.interval <- -3 - 1.5 + c(1, -1)*qt(0.95, 8)*se
mean.interval
se <- sqrt(0.5^2/100 + 2^2/100)
mean.interval <- 4 - 6 + c(1, -1)*qnorm(0.975)*se
mean.interval
se <- sqrt((9*0.5^2 + 9*2^2)/19)
mean.interval <- 4 - 6 + c(1, -1)*qnorm(0.975)*se
mean.interval
se <- sqrt(0.6^2/9 + 0.68^2/9)
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 9)*se
mean.interval
se <- sqrt(0.6^2/9 + 0.68^2/9)
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 8)*se
mean.interval
egMean <- -2
egN    <- 9
upper <- egMean + qt(0.975, df=egN-1)*2.10/sqrt(egN)
se <- -egMean*sqrt(egN)/qt(0.975, df=egN-1)
se
se <- sqrt(0.6^2/10 + 0.68^2/10)
mean.interval <- 3 - 5 + c(1, -1)*qt(0.975, 9)*se
mean.interval
data(sleep)
head(sleep)
head(sleep)
head(sleep,20)
library(reshape2)
?cast
dcast(sleep, ID~group)
dcast(sleep, ID~group, value.var=extra)
dcast(sleep, ID~group, value.var="extra")
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 9)*se/sqrt(20)
se <- sqrt(0.6^2/10 + 0.68^2/10)
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 9)*se/sqrt(20)
mean.interval
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 9)*se*sqrt(2/10)
mean.interval
se <- sqrt((9*0.6^2 + 9*0.68^2)/18)
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 9)*se*sqrt(2/10)
mean.interval
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 18)*se*sqrt(2/10)
mean.interval
se <- sqrt((9*0.6^2 + 9*0.68^2)/18)
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 18)*se*sqrt(2/10)
mean.interval
sp <- sqrt((0.6^2 + 0.68^2)/2) # Equal sizes.
mean.interval <- 3 - 5 + c(-1, 1)*qt(0.975, 18)*sp*sqrt(2/10)
mean.interval
se <- sqrt((1.5^2 + 1.8^2)/2)
mean.interval <- -3 - 1 + c(-1, 1)*qnorm(0.95, 16)*se*sqrt(2/9)
mean.interval
se <- sqrt((1.5^2 + 1.8^2)/2) # Equal sizes.
mean.interval <- -3 - 1 + c(-1, 1)*qnorm(0.95)*se*sqrt(2/9)
mean.interval
egMean <- 1100
egSD   <- 30
egN    <- 9
t.interval <- egMean + c(-1,1)*qt(0.975, df=egN-1)*egSD/sqrt(egN)
t.interval
egMean <- -2
egN    <- 9
upper <- egMean + qt(0.975, df=egN-1)*2.10/sqrt(egN)
se <- -egMean*sqrt(egN)/qt(0.975, df=egN-1)
se
sp <- sqrt((1.5^2 + 1.8^2)/2) # Equal sizes.
mean.interval <- -3 - 1 + c(-1, 1)*qnorm(0.95)*sp*sqrt(2/9)
mean.interval
png("../output/Exp Histograms.png")
ggplot(xsmplDF, aes(x)) + geom_histogram(binwidth=1.5) +
facet_wrap(~ n, scales='free_y') +
labs(title=expression("Sample Histograms of"~X),
y=expression("#"(x))) +
geom_vline(data=by_n, mapping=aes(xintercept=Mean),
color="green3")
nil <- dev.off()
library(ggplot2)
png("../output/Exp Histograms.png")
ggplot(xsmplDF, aes(x)) + geom_histogram(binwidth=1.5) +
facet_wrap(~ n, scales='free_y') +
labs(title=expression("Sample Histograms of"~X),
y=expression("#"(x))) +
geom_vline(data=by_n, mapping=aes(xintercept=Mean),
color="green3")
nil <- dev.off()
source('~/.active-rstudio-document')
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) + geom_histogram() +
labs(title=expression("Sample Histograms of"~bar(X)[n]),
y=expression("#"(x))) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="deeppink2")
nil <- dev.off()
mean(meansDF$x_bar)
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) + geom_histogram() +
labs(title=expression("Sample Histograms of"~bar(X)[n]),
y=expression("#"(x))) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) + geom_histogram(binwidth=0.2) +
labs(title=expression("Sample Histograms of"~bar(X)[n]),
y=expression("#"(x))) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
barHistogram <- ggplot(meansDF, aes(x_bar)) +
geom_histogram(binwidth=0.2) +
labs(title=expression("Sample Histograms of"~bar(X)[n]),
y=expression("#"(x))) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
png("../output/Exp_Bar Histogram.png")
print(barHistogram)
nil <- dev.off()
meansDF <- data.frame(x_bar=apply(expMat, 2, mean))
barHistogram <- ggplot(meansDF, aes(x_bar)) +
geom_histogram(binwidth=0.2) +
labs(title=expression("Sample Histograms of"~bar(X)[n]),
y=expression("#"(x))) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
png("../output/Exp_Bar Histogram.png")
print(barHistogram)
nil <- dev.off()
barHistogram <- ggplot(meansDF, aes(x_bar)) +
geom_histogram(binwidth=0.2) +
labs(title=expression("Sample Histograms of"~bar(X)[n]),
y=expression("#"(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
png("../output/Exp_Bar Histogram.png")
print(barHistogram)
nil <- dev.off()
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density.., binwidth=0.2) +
labs(title=expression("Sample Histogram of"~bar(X)[n]),
y=expression("#"(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
meansDF <- data.frame(x_bar=apply(expMat, 2, mean))
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density.., binwidth=0.2) +
labs(title=expression("Sample Histogram of"~bar(X)[n]),
y=expression("#"(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density..), binwidth=0.2) +
labs(title=expression("Sample Histogram of"~bar(X)[n]),
y=expression("#"(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
png("../output/HistogramDensity.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density..), binwidth=0.2) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
stat_function(data=data.frame(x=c(0,10)),
fun=function(x)dnorm(x,lambda), geom="line")
nil <- def.off(
meansDF <- data.frame(x_bar=apply(expMat, 2, mean))
png("../output/HistogramDensity.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density..), binwidth=0.2) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
stat_function(data=data.frame(x=c(0,10)),
fun=function(x)dnorm(x,lambda), geom="line")
nil <- def.off()
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(binwidth=0.2) +
labs(title=expression("Sample Histogram of"~bar(X)[n]),
y=expression("#"(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
png("../output/HistogramDensity.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density..), binwidth=0.2) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
nil <- def.off()
nil <- dev.off()
png("../output/HistogramDensity.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density..), binwidth=0.2) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
stat_function(data=data.frame(x=c(0,10)), geom="line",
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
nil <- dev.off()
png("../output/HistogramDensity.png")
ggplot(meansDF, aes(x_bar)) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
geom_histogram(aes(y=..density..), binwidth=0.2) +
stat_function(data=data.frame(x=c(0,10)), geom="line",
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
nil <- dev.off()
ggplot(meansDF, aes(x_bar)) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
bar <- ggplot(meansDF, aes(x_bar)) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
bar <- ggplot(meansDF, aes(x_bar)) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
geom_histogram(aes(y=..density..), binwidth=0.2) +
stat_function(data=data.frame(x=c(0,10)), geom="line",
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size)))
bar <- ggplot(meansDF, aes(x_bar)) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
geom_histogram(aes(y=..density..), binwidth=0.2) +
stat_function(data=data.frame(x=c(0,10)), geom="line",
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x_bar)) +
geom_histogram(aes(y=..density..), binwidth=0.2) +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3") +
stat_function(data=data.frame(x=c(0,10)), geom="line",
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x_bar, y=..density..),
geom='histogram') +
geom_vline(xintercept=mean(meansDF$x_bar)),
color="red3") +
stat_function(data=data.frame(x=c(0,10)), geom="line",
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
x = rnorm(1000);
# overlay histogram, empirical density and normal density
p0 = qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
opts(legend.position = c(0.85, 0.85))
print(p0)
bar <- qplot(meansDF, geom='blank') +
geom_vline(meansDF, xintercept=mean(x_bar), color="red3") +
stat_function(
fun=function(x)dnorm(x,1/lambda,1/lambda*sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..)) +
geom_vline(xintercept=mean(x_bar), color="red3") +
stat_function(fun=function(x)dnorm(x,1/lambda,1/lambda)) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
bar <- ggplot(meansDF, aes(x=x_bar))
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..)) +
geom_vline(xintercept=mean(x), color="red3") +
stat_function(fun=function(x)dnorm(x,1/lambda,1/lambda)) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..)) +
geom_vline(xintercept=mean(x), color="red3") +
stat_function(fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..), histogram) +
geom_vline(aes(xintercept=mean(x_bar)), color="red3") +
stat_function(fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..), binwidth=0.25) +
geom_vline(aes(xintercept=mean(x_bar)), color="red3") +
stat_function(fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..), binwidth=0.25) +
geom_vline(aes(xintercept=mean(x_bar)), color="red3") +
stat_function(color="green3", fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title=expression("Density of"~bar(X)[n]),
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..), binwidth=0.25,
alpha=0.5) +
geom_vline(aes(xintercept=mean(x_bar)), color="red3") +
stat_function(color="green3", fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title="Density vs. Histogram",
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..), binwidth=0.25,
alpha=0.8) +
geom_vline(aes(xintercept=mean(x_bar)), color="red3") +
stat_function(color="green3", fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title="Density vs. Histogram",
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
meansDF <- data.frame(x_bar=apply(expMat, 2, mean))
png("../output/Exp_Bar Histogram.png")
ggplot(meansDF, aes(x_bar)) +
geom_histogram(binwidth=0.2, alpha=0.8) +
labs(title=expression("Sample Histogram of"~bar(X)[n]),
y=expression("#"(x)), x="x") +
geom_vline(data=meansDF, mapping=aes(xintercept=mean(x_bar)),
color="red3")
nil <- dev.off()
png("../output/Exp Histograms.png")
ggplot(xsmplDF, aes(x)) +
geom_histogram(binwidth=1.5, alpha=0.8) +
facet_wrap(~ n, scales='free_y') +
labs(title=expression("Sample Histograms of"~X),
y=expression("#"(x))) +
geom_vline(data=by_n, mapping=aes(xintercept=Mean),
color="green3")
nil <- dev.off()
bar <- ggplot(meansDF, aes(x=x_bar)) +
geom_histogram(aes(y = ..density..), binwidth=0.2,
alpha=0.8) +
geom_vline(aes(xintercept=mean(x_bar)), color="red3") +
stat_function(color="green3", fun=function(x)
dnorm(x,1/lambda,1/lambda/sqrt(size))) +
labs(title="Density vs. Histogram",
y=expression(f(x)), x="x")
png("../output/HistogramDensity.png")
print(bar)
nil <- dev.off()
var(meansDF$bar_x)
var(meansDF$x_bar)
25/40
mean(meansDF$x_bar)
library(datasets)
data(ToothGrow)
data(ToothGrowth)
data(ToothGrowth)
rm(list=ls())
data(ToothGrowth)
names(ToothGrowth)
head(ToothGrowth, 10)
length(ToothGrowth)
dim(ToothGrowth)
toothGrowth <- data(ToothGrowth)
toothGrowth <- data(ToothGrowth) %>%
dcast(supp ~ dose, value.var="len")
toothGrowth <- data(ToothGrowth) %>%
dcast(supp ~ dose, value.var=len)
toothGrowth
toothGrowth <- data(ToothGrowth)
toothGrowth
ToothGrowth
ToothGrowth <- dcast(supp ~ dose, value.var=len)
ToothGrowth <- dcast(ToothGrowth, supp ~ dose, value.var=len)
ToothGrowth <- dcast(ToothGrowth, supp ~ dose, value.var="len")
help(ToothGrowth)
rep(1:10,6)
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6)) %>%
dcast(ToothGrowth, pig ~ supp + dose, value.var="len)
;
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6)) %>%
dcast(ToothGrowth, pig ~ supp + dose, value.var="len")
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6))
dim(ToothGrowth)
data(ToothGrowth)
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6)) %>%
dcast(ToothGrowth, pig ~ supp + dose, value.var="len")
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6))
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6)) %>%
dcast(ToothGrowth, pig ~ supp + dose, value.var="len")
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6))
toothData
cast(toothData, pig~supp)
dcast(toothData, pig~supp)
dcast(ToothGrowth, pig ~ supp, value.var="len")
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6)) %>%
dcast(ToothGrowth, pig ~ supp, value.var="len")
toothData <- ToothGrowth %>% mutate(pig = rep(1:10,6)) %>%
dcast(ToothGrowth, pig ~ supp, value.var="len")
data(ChickWeight)
head(ChickWeight)
dCast(ChickWeight, Diet+Chick~Time, value.var="weigth")
library(reshape2)
dCast(ChickWeight, Diet+Chick~Time, value.var="weigth")
dcast(ChickWeight, Diet+Chick~Time, value.var="weigth")
dcast(ChickWeight, Diet+Chick~Time, value.var="weight")
head(dcast(ChickWeight, Diet+Chick~Time, value.var="weight"))
head(ToothGrowth)
toothData <- ToothGrowth %>% mutate(ID = rep(1:10,6)) %>%
dcast(ToothGrowth, ID + VC ~ supp, value.var="len")
toothData <- ToothGrowth %>% mutate(ID = rep(1:10,6)) %>%
dcast(ToothGrowth, ID + supp ~ dose, value.var="len")
toothData <- ToothGrowth %>% mutate(ID = rep(1:10,6))
toothData
?sample
sample(1:2, 10, replace=T, prob=0.7)
sample(1:2, 10, replace=T, prob=c(0.7, 0.3))
sample(0:1, 10, replace=T, prob=c(0.7, 0.3))
?runif
?rbern
rbinom
?rbinom
rbinom(2, 10, 0.7)
sample(0:1, 10, replace=T, prob=c(0.3, 0.7))
sample(0:1, 10, replace=T, prob=c(0.4, 0.6))
sample(0:1, 10, replace=T, prob=c(0.4, 0.6))
rbind(1:10, sample(0:1, 10, replace=T, prob=c(0.4, 0.6)))
rbind(1:10, sample(0:1, 10, replace=T, prob=c(0.4, 0.6)))
toothData <- ToothGrowth %>% mutate(ID = rep(1:10,6)) %>%
dcast(ToothGrowth, ID + supp ~ dose, value.var="len")
toothData <- ToothGrowth %>% mutate(ID = rep(1:10,6)) %>%
dcast(ToothGrowth, ID ~ dose + supp, value.var="len")
help(ToothGrowth)
git push --set-upstream origin master
source('~/Sync/Dropbox/R/Coursera/6 Statistical Inference/Project/src/exploratory.R')
